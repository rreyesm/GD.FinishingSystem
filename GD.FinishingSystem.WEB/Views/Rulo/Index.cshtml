@model IEnumerable<GD.FinishingSystem.Entities.ViewModels.VMRulo>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var styleList = ViewBag.StyleList;
}

<style>
    .input-xs {
        height: 22px;
        padding: 2px 5px;
        font-size: 12px;
        line-height: 1.5; /* If Placeholder of the input is moved up, rem/modify this. */
        border-radius: 3px;
    }
</style>
<h1 class="mt-4">Rulos</h1>

@if (User.IsInRole("RuloAdd") || User.IsInRole("AdminFull") || User.IsInRole("RuloFull"))
{
    <p>
        <a asp-action="Create" class="btn btn-sm btn-outline-light border-dark btn-dark">
            <i class="lni lni-circle-plus"></i> Create New
        </a>
    </p>
}

<form asp-action="Index" method="post" id="formFilters">


    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label for="dtBegin">Begin</label><br>
                <input type="date" style="width:100% !important;" id="dtBegin" name="dtBegin">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="dtEnd">End</label><br>
                <input type="date" style="width:100% !important;" id="dtEnd" name="dtEnd">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numLote">Lote</label><br>
                <input numLote type="number" onfocusout="controlForSmallerThanZero('numLote')" min="0" style="width:100% !important;" id="numLote" name="numLote">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numBeam">Beam</label><br>
                <input type="number" onfocusout="controlForSmallerThanZero('numBeam')" min="0" style="width:100% !important;" id="numBeam" name="numBeam">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numLoom">Loom</label><br>
                <input type="number" onfocusout="controlForSmallerThanZero('numLoom')" min="0" style="width:100% !important;" id="numLoom" name="numLoom">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numPiece">Piece</label><br>
                <input type="number" onfocusout="controlForSmallerThanZero('numPiece')" min="0" style="width:100% !important;" id="numPiece" name="numPiece">
            </div>
        </div>

    </div>

    @*SECOND ROW*@

    <div class="row">


        <div class="col-md-2">
            <div class="form-group">
                <label for="numPiece">Style</label><br>
                <input type="text" style="width:100% !important;" id="txtStyle" name="txtStyle" list="styleList">
                <datalist id="styleList">
                    @foreach (var item in styleList)
                    {
                        <option value="@item"></option>
                    }
                </datalist>
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                <label for="numTestCategory">Test Result</label><br>
                <select style="width:100% !important;" id="numTestCategory" name="numTestCategory" asp-items="@ViewBag.TestCategorytList"></select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numDefinitionProcess">Def. Process</label><br />
                <select style="width:100% !important;" id="numDefinitionProcess" name="numDefinitionProcess" asp-items="@ViewBag.DefinitionProcessList"></select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numDefinitionProcess">Folio Number</label><br />
                <input type="number" onfocusout="controlForSmallerThanZero('folioNumber')" min="0" style="width:100% !important;" id="folioNumber" name="folioNumber">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12" style="text-align:right">
            <a onclick="setIndex();" class="btn btn-outline-info"><i class="lni lni-search"></i> Filter</a>
            <a onclick="clearFilters();" class="btn btn-outline-info"><i class="lni lni-brush"></i> Clear Filters</a>
        </div>
    </div>
</form>

<table class="table table-sm table-hover table-responsive-lg">
    <thead>
        <tr>
            <th colspan="9">
                <div>
                    Rulo List
                    <a onclick="exportToExcel();" class="btn btn-sm btn-success"><i class="lni lni-printer"></i> Export to Excel</a>
                </div>
            </th>
        </tr>
        <tr>
            <th>
                <i class="lni lni-line-dashed"></i>
            </th>
            <th>
                Lote - Beam - Loom - Piece
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Style)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StyleName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EntranceLength)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExitLength)
            </th>
            <th>
                Test Result
            </th>
            <th>
                Processes
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var color = "bgcolor=transparent";
            if (item.CanContinue)
                color = "bgcolor=66ff66";
            else if (item.TestCategoryID == 2 || item.TestCategoryID == 4) //Ok X or Fail X
                color = "bgcolor=ff6666";

            <tr @color>
                <td>
                    @Html.DisplayFor(modelItem => item.RuloID)
                </td>
                <td>
                    <div style="display:block;width:210px;">

                        @Html.DisplayFor(modelItem => item.Lote)
                        -
                        @Html.DisplayFor(modelItem => item.Beam)
                        @Html.DisplayFor(modelItem => item.BeamStop)
                        -
                        @Html.DisplayFor(modelItem => item.Loom)
                        @Html.DisplayFor(modelItem => item.LoomLetter)
                        -
                        @Html.DisplayFor(modelItem => item.Piece)
                        @Html.DisplayFor(modelItem => item.PieceLetter)
                    </div>
                </td>
                <td>
                    <div style="display:block;width:95px;">
                        @Html.DisplayFor(modelItem => item.Style)
                    </div>
                </td>
                <td>
                    <div style="display:block;width:260px;">
                        @Html.DisplayFor(modelItem => item.StyleName)
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EntranceLength)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExitLength)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TestCategoryCode)
                </td>

                <td>
                    <div style="display:block;width:300px;">
                        @if (User.IsInRole("RuloProcessShow") || User.IsInRole("AdminFull") || User.IsInRole("RuloProcessFull"))
                        {
                            <a asp-controller="RuloProcess" asp-action="Index" asp-route-ruloid="@item.RuloID" class="btn input-xs btn-info">
                                <i class="lni lni-list "></i> Process
                            </a>
                        }

                        @if (User.IsInRole("RuloProcess", AuthType.Show))
                            @Html.Raw(" | ")

                        <a onclick="PrintLabel(@item.RuloID)" class="btn  input-xs btn-danger"><i class="lni lni-printer"></i> Print</a>

                        @if (User.IsInRole("TestResult", AuthType.Add))
                        {
                            @if (item.TestResultID == null || item.TestResultID == 0 || item.IsWaitingAnswerFromTest)
                            {
                                @Html.Raw(" | ")
                                <a onclick="testResult(@item.RuloID)" class="btn  input-xs btn-danger" data-toggle="modal" data-target="#modalDialog"><i class="lni lni-flag"></i> Test Result</a>
                            }
                        }


                    </div>

                </td>

                <td>
                    <div style="display:block;width:107px;">
                        @if (User.IsInRole("Rulo", AuthType.Update))
                        {
                            <a asp-controller="Rulo" asp-action="Edit" asp-route-ruloid="@item.RuloID">
                                <i class="lni lni-slice"></i>
                            </a>
                        }

                        @if (User.IsInRole("Rulo", AuthType.Show))
                        {
                            if (User.IsInRole("Rulo", AuthType.Update))
                                @Html.Raw(" | ")

                                <a asp-controller="Rulo" asp-action="Details" asp-route-ruloid="@item.RuloID">
                                    <i class="lni lni-question-circle"></i>
                                </a>
                            }

                        @if (User.IsInRole("Rulo", AuthType.Delete))
                        {
                            if (User.IsInRole("Rulo", AuthType.Update) || User.IsInRole("Rulo", AuthType.Show))
                                @Html.Raw(" | ")
                                <a asp-controller="Rulo" asp-action="Delete" asp-route-ruloid="@item.RuloID">
                                    <i class="lni lni-circle-minus"></i>
                                </a>
                            }
                        @if (User.IsInRole("Rulo", AuthType.Show))
                        {
                            if (User.IsInRole("Rulo", AuthType.Update) || User.IsInRole("Rulo", AuthType.Show) || User.IsInRole("Rulo", AuthType.Delete))
                                @Html.Raw(" | ")

                                <a alt="Processes" onclick="showProcesses(@item.RuloID);" href="#" data-toggle="modal" data-target="#modalDialogprocesses">
                                    <i class="lni lni-direction-alt"></i>
                                </a>
                            }
                    </div>

                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="modalDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Test Result</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="objModal"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="Finish();">Save changes</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="modalDialogprocesses" tabindex="-1" role="dialog" width="350px" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Rulo Processes List</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="processesDef"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    document.getElementById("dtBegin").value = '@ViewBag.dtBegin.ToString()';
    document.getElementById("dtEnd").value = '@ViewBag.dtEnd.ToString()';

    document.getElementById("numLote").value = '@ViewBag.numLote';
    document.getElementById("numBeam").value = '@ViewBag.numBeam';
    document.getElementById("numLoom").value = '@ViewBag.numLoom';
    document.getElementById("numPiece").value = '@ViewBag.numPiece';
    document.getElementById("txtStyle").value = '@ViewBag.txtStyle';
    document.getElementById("numTestCategory").value = '@ViewBag.numTestCategory';
    document.getElementById("numDefinitionProcess").value = '@ViewBag.numDefinitionProcess'
    document.getElementById("folioNumber").value = '@ViewBag.FolioNumber'

    function testResult(ruloId) {

        var testCategory = @Html.Raw(ViewBag.ModalTestResultList);
        var sel = "Select Test Result: <Select id='ddlTestResults'>";

        $.each(testCategory, function (index, value) {
            sel += "<option value='" + value.Value + "'>" + value.Text + "</option>";
            console.log('The value at arr[' + value.Value + '] is: ' + value.Text);
        })

        sel += "</select>";
        sel += "<input type=hidden id='ruloId' name='ruloId' value = " + ruloId + "></input>";

        document.getElementById('objModal').innerHTML = sel;
    }

    function PrintLabel(ruloId) {
        if (confirm('Are you sure you want to print this label?')) {

            $.ajax({
                url: "/Rulo/Print",
                type: "POST",
                data:
                {
                    RuloId: ruloId
                },
                success: function (data) {
                    if (data) {
                        if (data.errorMessage)
                            alert(data.errorMessage);
                        else
                            alert("Listo!");
                    }
                    else
                        alert("Listo!");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("404 Not found!");
                }
            });
        }
    }

    function controlForSmallerThanZero(controlID) {
        try {
            var value = document.getElementById(controlID).value;
            var a = parseInt(value);
            if (!(a > 0)) document.getElementById(controlID).value = "0";
        }
        catch (err) {
            document.getElementById(controlID).value = "0";
        }
    }

    function Finish() {
        var description = $("#ddlTestResults :selected").text();
        if (description == 'All') {
            alert('Please select an option');
            return;
        }

        if (confirm('Are you sure you want to finish this Test Result')) {
            TestResultFinish();
        }
    }

    function TestResultFinish() {

        var ruloId = $("#ruloId").val();
        var testCategoryId = $("#ddlTestResults :selected").val();
        var description = $("#ddlTestResults :selected").text();

        $.ajax({
            url: "/Rulo/TestResultFinish",
            type: "POST",
            data:
            {
                RuloId: ruloId,
                TestCategoryId: testCategoryId,
                Description: description
            },
            success: function (data) {
                location.reload();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });
    }



    function showProcesses(RuloID) {

        $.ajax({
            url: "/Rulo/GetProcesses",
            type: "GET",
            data:
            {
                RuloId: RuloID
            },
            success: function (data) {
                document.getElementById('processesDef').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });

    }

    function setIndex() {
        document.getElementById("formFilters").action = "/Rulo";
        document.getElementById("formFilters").submit();
    }

    function exportToExcel() {

        document.getElementById("formFilters").action = "/Rulo/ExportToExcel";
        document.getElementById("formFilters").submit();
    }

    function clearFilters() {
        document.getElementById("numLote").value = 0;
        document.getElementById("numBeam").value = 0;
        document.getElementById("numLoom").value = 0;
        document.getElementById("numPiece").value = 0;
        document.getElementById("txtStyle").value = '';
        document.getElementById("numTestCategory").value = 0;
        document.getElementById("numDefinitionProcess").value = 0;
        document.getElementById("folioNumber").value = 0;
        document.getElementById("formFilters").submit();
    }

</script>