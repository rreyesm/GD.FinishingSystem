@model IEnumerable<GD.FinishingSystem.Entities.ViewModels.VMRulo>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var styleList = ViewBag.StyleList;
    var role = User.IsInRole("RuloFull") || User.IsInRole("AdminFull") == true ? 1 : 0;
    var positionRuloId = ViewBag.PositionRuloId;

}

<div class="row">
    <h1 class="mt-4">Rulos</h1>
    <h4 id="titleRulos" class="mt-4">@Html.Raw(ViewBag.CurrentPeriod)</h4>
</div>

@if (User.IsInRole("RuloAdd") || User.IsInRole("AdminFull") || User.IsInRole("RuloFull"))
{
    <p>
        <a asp-action="Create" class="btn btn-sm btn-outline-light border-dark btn-dark">
            <i class="lni lni-circle-plus"></i> Create New
        </a>
    </p>
}

<form asp-action="Index" method="post" id="formFilters">


    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label for="dtBegin">Begin</label><br>
                <input type="date" style="width:100% !important;" id="dtBegin" name="dtBegin">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="dtEnd">End</label><br>
                <input type="date" style="width:100% !important;" id="dtEnd" name="dtEnd">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numLote">Lote</label><br>
                <input numLote type="number" onfocusout="controlForSmallerThanZero('numLote')" min="0" style="width:100% !important;" id="numLote" name="numLote">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numBeam">Beam</label><br>
                <input type="number" onfocusout="controlForSmallerThanZero('numBeam')" min="0" style="width:100% !important;" id="numBeam" name="numBeam">
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numLoom">Loom</label><br>
                <input type="number" onfocusout="controlForSmallerThanZero('numLoom')" min="0" style="width:100% !important;" id="numLoom" name="numLoom">
            </div>
        </div>
        @*<div class="col-md-2">
                <div class="form-group">
                    <label for="numPiece">Piece</label><br>
                    <input type="number" onfocusout="controlForSmallerThanZero('numPiece')" min="0" style="width:100% !important;" id="numPiece" name="numPiece">
                </div>
            </div>*@

        <div class="col-md-2">
            <div class="form-group">
                <label for="txtStyle">Style</label><br>
                <input type="text" style="width:100% !important;" id="txtStyle" name="txtStyle" list="styleList">
                <datalist id="styleList">
                    @foreach (var item in styleList)
                    {
                        <option value="@item"></option>
                    }
                </datalist>
            </div>
        </div>

    </div>

    @*SECOND ROW*@

    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label for="numTestCategory">Test Result</label><br>
                <select style="width:100% !important;" id="numTestCategory" name="numTestCategory" asp-items="@ViewBag.TestCategorytList"></select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="numDefinitionProcess">Def. Process</label><br />
                <select style="width:100% !important;" id="numDefinitionProcess" name="numDefinitionProcess" asp-items="@ViewBag.DefinitionProcessList"></select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="folioNumber">Folio Number</label><br />
                <input type="number" onfocusout="controlForSmallerThanZero('folioNumber')" min="0" style="width:100% !important;" id="folioNumber" name="folioNumber">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12" style="text-align:right">
            <a onclick="setIndex();" class="btn btn-sm btn-outline-info"><i class="lni lni-search"></i> Filter</a>
            <a onclick="clearFilters();" class="btn btn-sm btn-outline-info"><i class="lni lni-brush"></i> Clear Filters</a>
        </div>
    </div>
</form>

<table id="tableRulos" class="table table-sm table-hover table-responsive-lg">
    <thead>
        <tr>
            <th colspan="10">
                <div>
                    Rulo List
                    <a onclick="exportToExcel();" class="btn btn-sm btn-success"><i class="lni lni-printer"></i> Export to Excel</a>
                    @if (User.IsInRole("Authorize", AuthType.Full))
                    {
                        <a onclick="exportToExcelAllStock();" class="btn btn-sm btn-danger"><i class="lni lni-printer"></i> Export All Stock</a>
                    }
                </div>
            </th>
        </tr>
        <tr>
            <th>
                <i class="lni lni-line-dashed"></i>
            </th>
            <th>
                Lote - Beam - Loom
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Style)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StyleName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EntranceLength)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExitLength)
            </th>
            <th></th>
            <th>
                Test Result
            </th>
            <th>
                Processes
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var color = "bgcolor=transparent";
            if (item.CanContinue)
                color = "bgcolor=66ff66";
            else if (item.TestCategoryCode.Contains(" X", StringComparison.InvariantCultureIgnoreCase)) //Ok X or Fail X
                color = "bgcolor=ff6666";

            <tr @color id="@("row"+@item.RuloID)">
                <td>
                    @Html.DisplayFor(modelItem => item.RuloID)
                </td>
                <td>
                    <div style="display:block;width:170px;">

                        @Html.DisplayFor(modelItem => item.Lote)
                        -
                        @Html.DisplayFor(modelItem => item.Beam)@Html.DisplayFor(modelItem => item.BeamStop)
                        -
                        @Html.DisplayFor(modelItem => item.Loom)@Html.Raw(item.IsToyota ? "T" : "")
                    </div>
                </td>
                <td>
                    <div style="display:block;width:95px;">
                        @Html.DisplayFor(modelItem => item.Style)
                    </div>
                </td>
                <td>
                    <div style="display:block;width:260px;">
                        @Html.DisplayFor(modelItem => item.StyleName)
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EntranceLength)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExitLength)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.TestCategoryCode))
                    {
                        <a alt="Test Result" onclick="showTestResultObservations(@item.RuloID);" href="#" data-toggle="modal" data-target="#modalDialogGeneral">
                            <i class="lni lni-eye"></i>
                        </a>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TestCategoryCode)
                </td>

                <td>

                    <div style="display:block;width:150px;">
                        @if (item.SentAuthorizerID == null && item.FolioNumber == 0)
                        {
                        @if (User.IsInRole("Rulo", AuthType.Update))
                            {
                        <a onclick="showFolioNumber(@item.RuloID)" class="btn input-xs btn-success" data-backdrop="static" data-keyboard="false" href="#" data-toggle="modal" data-target="#modalDialogGeneral">
                            <i class="lni lni-arrow-right-circle"></i>
                        </a>

                        @Html.Raw(" | ")
                            }
                        }
                        else
                        {
                        @if (User.IsInRole("Authorize", AuthType.Full))
                            {
                        @if (item.SentAuthorizerID == null)
                                {
                        <a onclick="authorizeRulo(@item.RuloID)" class="btn input-xs btn-danger">
                            <i class="lni lni-checkmark-circle"></i>
                        </a>

                        @Html.Raw(" | ")
                                }

                            }
                        }

                        @*@if (User.IsInRole("Authorize", AuthType.Show))
        {
            if (item.SentAuthorizerID == null && item.FolioNumber == 0)
            {
                @Html.Raw(" | ")
            }
        }*@

                        @if (User.IsInRole("Piece", AuthType.Show))
                        {
                        <a onclick="showPieces(@item.RuloID)" alt="Pieces" class="btn input-xs btn-warning" data-backdrop="static" data-keyboard="false" href="#" data-toggle="modal" data-target="#modalDialogPieces">
                            <i alt="Pieces" class="lni lni-slice"></i>
                        </a>
                        }

                        @if (User.IsInRole("Authorize", AuthType.Show) || User.IsInRole("Piece", AuthType.Show))
                        @Html.Raw(" | ")

                        @if (User.IsInRole("RuloProcessShow") || User.IsInRole("AdminFull") || User.IsInRole("RuloProcessFull"))
                        {
                        <a asp-controller="RuloProcess" asp-action="Index" asp-route-ruloid="@item.RuloID" class="btn input-xs btn-info">
                            <i class="lni lni-list "></i>
                        </a>
                        }

                        @if (User.IsInRole("Authorize", AuthType.Show) || User.IsInRole("Piece", AuthType.Show) || User.IsInRole("RuloProcess", AuthType.Show))


                        @if (User.IsInRole("TestResult", AuthType.Add))
                            {
                        @if (item.TestResultID == null || item.TestResultID == 0 || item.IsWaitingAnswerFromTest)
                                {
                        @Html.Raw(" | ")
                        <a onclick="testResultValidateInfo(@item.RuloID)" class="btn  input-xs btn-dark"><i class="lni lni-flag"></i></a>
 <!-- <a onclick="testResult(@item.RuloID)" class="btn  input-xs btn-dark" data-toggle="modal" data-target="#modalDialog"><i class="lni lni-flag"></i></a>-->
                                }
                            }


                    </div>

                    </td>

                    <td>
                        <div style="display:block;width:134px;">
                            @if (User.IsInRole("Rulo", AuthType.Update))
                            {
                                <a asp-controller="Rulo" asp-action="Edit" asp-route-ruloid="@item.RuloID">
                                    <i class="lni lni-slice"></i>
                                </a>
                            }

                            @if (User.IsInRole("Rulo", AuthType.Show))
                            {
                                if (User.IsInRole("Rulo", AuthType.Update))
                                    @Html.Raw(" | ")

                                    <a asp-controller="Rulo" asp-action="Details" asp-route-ruloid="@item.RuloID">
                                        <i class="lni lni-question-circle"></i>
                                    </a>
                                }

                            @if (User.IsInRole("Rulo", AuthType.Delete))
                            {
                                if (User.IsInRole("Rulo", AuthType.Update) || User.IsInRole("Rulo", AuthType.Show))
                                    @Html.Raw(" | ")
                                    <a asp-controller="Rulo" asp-action="Delete" asp-route-ruloid="@item.RuloID">
                                        <i class="lni lni-circle-minus"></i>
                                    </a>
                                }
                            @if (User.IsInRole("Rulo", AuthType.Show))
                            {
                                if (User.IsInRole("Rulo", AuthType.Update) || User.IsInRole("Rulo", AuthType.Show) || User.IsInRole("Rulo", AuthType.Delete))
                                    @Html.Raw(" | ")

                                    <a alt="Processes" onclick="showProcesses(@item.RuloID);" href="#" data-toggle="modal" data-target="#modalDialogprocesses">
                                        <i class="lni lni-direction-alt"></i>
                                    </a>
                                    @Html.Raw(" | ")

                                    <a href="#" onclick="printLabel(@item.RuloID)" data-toggle="modal" data-target="#modalDialogGeneral"><i class="lni lni-printer"></i></a>
                                }

                        </div>

                    </td>
                </tr>
            }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="modalDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Test Result</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="objModal"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="Finish();">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDialogprocesses" tabindex="-1" role="dialog" width="350px" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Rulo Processes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="processesDef"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*Pieces*@
<div class="modal fade" id="modalDialogPieces" tabindex="-1" role="dialog" width="350px" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="align-content: center">
                <div id="piecesInfo"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="document.getElementById('piecesInfo').innerHTML = ''" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*Dialog General*@
<div class="modal fade" id="modalDialogGeneral" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" onclick="restoreDialog();" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="generalInfo"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="restoreDialog();" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@*info*@
<hr />

<h5><strong>Definitions</strong></h5>

<div class="btn-group  btn-group-sm" role="group">

    <button type="button" class="btn btn-sm btn-warning"> <i alt="Pieces" class="lni lni-slice"></i> Pieces</button>
    <button type="button" class="btn btn-sm btn-danger"><i class="lni lni-checkmark-circle"></i> Authorize</button>
    <button type="button" class="btn btn-sm btn-success"><i class="lni lni-arrow-right-circle"></i> Send</button>
    <button type="button" class="btn btn-sm btn-info"><i class="lni lni-list "></i> Processes</button>
    <button type="button" class="btn btn-sm btn-dark"><i class="lni lni-flag"> Test Result</i></button>
</div>

@section scripts{
    <script>
        $(document).ready(function () {

        var position = '@positionRuloId';
        if (!isNaN(position) && position > 0) {
        var element = document.getElementById("row" + position);
        element.scrollIntoView({ block: "end", behavior: "smooth" });
        }

        });
    </script>
}

<script>
    document.getElementById("dtBegin").value = '@ViewBag.dtBegin.ToString()';
    document.getElementById("dtEnd").value = '@ViewBag.dtEnd.ToString()';

    document.getElementById("numLote").value = '@ViewBag.numLote';
    document.getElementById("numBeam").value = '@ViewBag.numBeam';
    document.getElementById("numLoom").value = '@ViewBag.numLoom';
    //document.getElementById("numPiece").value = '@ViewBag.numPiece';
    document.getElementById("txtStyle").value = '@ViewBag.txtStyle';
    document.getElementById("numTestCategory").value = '@ViewBag.numTestCategory';
    document.getElementById("numDefinitionProcess").value = '@ViewBag.numDefinitionProcess'
    document.getElementById("folioNumber").value = '@ViewBag.FolioNumber'

    function authorizeRulo(ruloId) {
        if (confirm('Are you sure you want to authorize this rulo?')) {
            $.ajax({
                url: "/Rulo/AuthorizeRulo",
                type: "POST",
                data:
                {
                    RuloId: ruloId,
                },
                success: function (data) {
                    location.reload();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("404 Not found!");
                }
            });
        }
    }

    function showFolioNumber(ruloId) {
            $.ajax({
                url: "/Rulo/GetFolioNumber",
                type: "GET",
                data:
                {
                    RuloId: ruloId
                },
                success: function (data) {
                    document.getElementById('generalInfo').innerHTML = data;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("404 Not found!");
                }
            });
    }

    function saveFolioNumber(ruloId) {
        var shift = $("#Shift").val();
        var folioNumber = $("#FolioNumber").val();

        $.ajax({
            url: "/Rulo/SaveFolioNumber",
            type: "POST",
            data:
            {
                RuloId: ruloId,
                Shift: shift,
                FolioNumber: folioNumber,
            },
            success: function (data) {
                if (data == '') {
                    location.reload();
                }
                else {
                    document.getElementById('generalInfo').innerHTML = data;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });
    }

    function testResultValidateInfo(ruloId) {
        $.ajax({
            url: "/Rulo/TestResultValidateInfo",
            type: "GET",
            data:
            {
                RuloId: ruloId,
            },
            success: function (data) {
                if (data.errorMessage != '') {
                    alert(data.errorMessage);
                }
                else {
                    $('#modalDialog').modal('show');
                    testResult(ruloId);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });
    }

    function showTestResultObservations(ruloId) {
        $.ajax({
            url: "/Rulo/GetTestResultObservations",
            type: "GET",
            data:
            {
                RuloId: ruloId,
            },
            success: function (data) {
                html = "<label for='ddlTestResultsDescription'>Observations:</label>"
                html += "<textarea id='ddlTestResultsDescription' name='ddlTestResultsDescription' rows='4' cols='50' disabled>" + data.details + "</textarea>"

                document.getElementById('generalInfo').innerHTML = html;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });
    }

    function testResult(ruloId) {

        var testCategory = @Html.Raw(ViewBag.ModalTestResultList);
        var sel = "Select Test Result: <Select id='ddlTestResults'>";

        $.each(testCategory, function (index, value) {
            sel += "<option value='" + value.Value + "'>" + value.Text + "</option>";
            console.log('The value at arr[' + value.Value + '] is: ' + value.Text);
        })

        sel += "</select>";

        sel += "<br/><label for='ddlTestResultsDescription'>Observations:</label>"
        sel += "<textarea id='ddlTestResultsDescription' name='ddlTestResultsDescription' rows='4' cols='50'></textarea>"

        sel += "<input type=hidden id='ruloId' name='ruloId' value = " + ruloId + "></input>";

        document.getElementById('objModal').innerHTML = sel;
    }

    function printLabel(ruloId) {
        var html

        $.ajax({
            url: "/Rulo/GetPieces",
            type: "POST",
            data:
            {
                RuloId: ruloId,
            },
            success: function (data) {
                if (data) {
                    if (!data.errorMessage) {
                        html = "Select piece number to print on the label: <Select id='ddlPieces'>";
                        $.each(data.pieces, function (index, value) {
                            html += "<option value='" + value.value + "'>" + value.text + "</option>";
                            console.log('The value at arr[' + value.Value + '] is: ' + value.Text);
                        })
                        html += "</select>";

                        html += '<br/><br/><a onclick="printLabelConfirm(\'gd1\')" class="btn btn-primary" role="button" data-backdrop="static" data-keyboard="false" href="#" data-target="#modalDialogGeneral">Printer GD1</a> | '
                        html += '<a onclick="printLabelConfirm(\'gd2\')" class="btn btn-success" role="button" data-backdrop="static" data-keyboard="false" href="#" data-target="#modalDialogGeneral">Printer GD2</a>'
                        html += "<input type=hidden id='ruloIdPrint' name='ruloIdPrint' value = " + ruloId + "></input>";

                        document.getElementById('modalDialogGeneral').classList.add('text-center');

                        document.getElementById('generalInfo').innerHTML = html;
                    }

                    else {
                        alert(data.errorMessage);
                    }

                    //alert("Listo!");
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });


    }

    function printLabelConfirm(floor) {
        var pieceId = $("#ddlPieces :selected").val();
        if (isNaN(pieceId) || pieceId <= 0) {
            return alert("Piece number no valid!");
        }

        if (confirm('Are you sure you want to print this label?')) {
            var ruloId = $("#ruloIdPrint").val();

            $.ajax({
                url: "/Rulo/Print",
                type: "POST",
                data:
                {
                    RuloId: ruloId,
                    Floor: floor,
                    PieceId: pieceId
                },
                success: function (data) {
                    if (data) {
                        if (data.errorMessage)
                            alert(data.errorMessage);
                        else
                            alert("Listo!");
                    }
                    else
                        alert("Listo!");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("404 Not found!");
                }
            });
        }


    }

    function restoreDialog() {
        document.getElementById('modalDialogGeneral').classList.remove('text-center');
    }

    function controlForSmallerThanZero(controlID) {
        try {
            var value = document.getElementById(controlID).value;
            var a = parseInt(value);
            if (!(a > 0)) document.getElementById(controlID).value = "0";
        }
        catch (err) {
            document.getElementById(controlID).value = "0";
        }
    }

    function Finish() {
        var description = $("#ddlTestResults :selected").text();
        if (description == 'All') {
            alert('Please select an option');
            return;
        }

        if (confirm('Are you sure you want to finish this Test Result')) {
            TestResultFinish();
        }
    }

    function TestResultFinish() {

        var ruloId = $("#ruloId").val();
        var testCategoryId = $("#ddlTestResults :selected").val();
        var testCategoryText = $("#ddlTestResults :selected").text();
        var description = $("#ddlTestResultsDescription").val();

        $.ajax({
            url: "/Rulo/TestResultFinish",
            type: "POST",
            data:
            {
                RuloId: ruloId,
                TestCategoryId: testCategoryId,
                TestCategoryText: testCategoryText,
                Description: description
            },
            success: function (data) {
                location.reload();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }
        });
    }

    function showPieces(ruloId) {
        $.ajax({
            url: "/Rulo/GetPieceIndex",
            type: "GET",
            data:
            {
                RuloId: ruloId
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function createOrUpdatePiece(ruloId, pieceId) {
        $.ajax({
            url: "/Rulo/GetCreateOrUpdatePiece",
            type: "GET",
            data:
            {
                RuloId: ruloId,
                PieceId: pieceId
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function savePiece(ruloId, pieceId) {
        var pieceNo = document.getElementById("pieceNo").value
        var meter = document.getElementById("meter").value

        $.ajax({
            url: "/Rulo/SavePiece",
            type: "GET",
            data:
            {
                RuloId: ruloId,
                PieceId: pieceId,
                PieceNo: pieceNo,
                Meter: meter
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function deleteConfirmedPiece(pieceId) {

        $.ajax({
            url: "/Rulo/DeleteConfirmedPiece",
            type: "GET",
            data:
            {
                PieceId: pieceId,
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function detailsPiece(pieceId) {
        $.ajax({
            url: "/Rulo/GetDetailsPiece",
            type: "GET",
            data:
            {
                PieceId: pieceId
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function deletePiece(pieceId) {
        $.ajax({
            url: "/Rulo/GetDeletePiece",
            type: "GET",
            data:
            {
                PieceId: pieceId
            },
            success: function (data) {
                document.getElementById('piecesInfo').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function showProcesses(RuloID) {

        $.ajax({
            url: "/Rulo/GetProcesses",
            type: "GET",
            data:
            {
                RuloId: RuloID
            },
            success: function (data) {
                document.getElementById('processesDef').innerHTML = data;

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });

    }

    function setIndex() {
        document.getElementById("formFilters").action = "/Rulo/Index";
        document.getElementById("formFilters").submit();
    }

    function exportToExcel() {

        document.getElementById("formFilters").action = "/Rulo/ExportToExcel";
        document.getElementById("formFilters").submit();
    }

    function clearFilters() {
        document.getElementById("numLote").value = 0;
        document.getElementById("numBeam").value = 0;
        document.getElementById("numLoom").value = 0;
        //document.getElementById("numPiece").value = 0;
        document.getElementById("txtStyle").value = '';
        document.getElementById("numTestCategory").value = 0;
        document.getElementById("numDefinitionProcess").value = 0;
        document.getElementById("folioNumber").value = 0;

        document.getElementById("formFilters").action = "/Rulo/Index";
        document.getElementById("formFilters").submit();
    }

    function exportToExcelAllStock() {

        document.getElementById("formFilters").action = "/Rulo/ExportToExcelAllStock";
        document.getElementById("formFilters").submit();
    }

    function setTitle(ruloId, role) {
        if (role == 1) {

            $.ajax({
                url: "/Rulo/GetInfoTitle",
                type: "GET",
                data:
                {
                    RuloId: ruloId
                },
                success: function (data) {
                    if (data) {
                        document.getElementById('titleRulos').innerText = " (" + data.title + ")";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Something went wrong!");
                }
            })

        }
    }

</script>