@model GD.FinishingSystem.Entities.ViewModels.VMRulo

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Rulo Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            <i class="lni lni-line-dashed"></i>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RuloID)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Lote)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Lote)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Beam)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Beam)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BeamStop)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BeamStop)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Loom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Loom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsToyota)
        </dt>
        <dd class="col-sm-10">
@*            @Html.Raw(Model.IsToyota ? "YES" : "NO")*@
            @Html.DisplayFor(model => model.IsToyota)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PieceCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PieceCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Style)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Style)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StyleName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StyleName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Width)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Width)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WeavingLength)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WeavingLength)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EntranceLength)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EntranceLength)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExitLength)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExitLength)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsWaitingAnswerFromTest)
        </dt>
        <dd class="col-sm-10">
            @*@Html.Raw(Model.IsWaitingAnswerFromTest ? "YES" : "NO")*@
            @Html.DisplayFor(model => model.IsWaitingAnswerFromTest)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RuloObservations)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RuloObservations)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TestCategoryCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TestCategoryCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CanContinue)
        </dt>
        <dd class="col-sm-10">
            @*@Html.Raw(Model.CanContinue ? "YES" : "NO")*@
            @Html.DisplayFor(model => model.CanContinue)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TestResultAuthorizer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TestResultAuthorizer)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FolioNumber)
        </dt>
        <dd class="col-sm-10">
            <span style="color:red; font-weight:bold">
                @Html.DisplayFor(model => model.FolioNumber)
            </span>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SentDate)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.SentDate?.ToString("yyyy-MM-dd HH:mm"))
        </dd>

    </dl>
</div>
<div>
    @if (Model.TestResultID == null) //If test result is null show button processes
    {
        <a asp-action="Edit" class="btn btn-sm btn-success" asp-route-ruloid="@Model.RuloID"><i class="lni lni-slice"></i> Edit</a> 
        Html.Raw(" | ");
    }
    <a asp-action="Index" asp-route-positionruloid="@Model.RuloID" class="btn btn-sm btn-secondary"><i class="lni lni-chevron-left-circle"></i> Back to List</a>
</div>
