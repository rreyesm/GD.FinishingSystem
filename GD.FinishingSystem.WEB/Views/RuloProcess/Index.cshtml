@model IEnumerable<GD.FinishingSystem.Entities.ViewModels.VMRuloProcess>

@{
    ViewData["Title"] = "Index";
    int relRuloId = ViewBag.RelRuloId;
}

<style>
    .input-xs {
        height: 22px;
        padding: 2px 5px;
        font-size: 12px;
        line-height: 1.5; /* If Placeholder of the input is moved up, rem/modify this. */
        border-radius: 3px;
    }
</style>

<h1 class="mt-4">Rulo Processes</h1>

@if (User.IsInRole("RuloProcessAdd") || User.IsInRole("RuloProcessFull") || User.IsInRole("AdminFull"))
{
    if (relRuloId != 0)
    {
        <a asp-action="Create" asp-route-relruloid="@relRuloId" class="btn btn-sm btn-outline-light border-dark btn-dark">
            <i class="lni lni-circle-plus"></i> Create New
        </a>
    }

}
@if (User.IsInRole("RuloProcess", AuthType.Add))
    @Html.Raw(" | ")

<a asp-action="Index" asp-controller="Rulo" class="btn btn-sm btn-secondary"><i class="lni lni-chevron-left-circle"></i> Back to Rulos</a>
<br />
<br />

<table class="table table-sm table-hover table-responsive-md">
    <thead>
        <tr>
            <th colspan="8">Rulo Process List</th>
        </tr>
        <tr>
            <th>
                <i class="lni lni-line-dashed"></i>
            </th>

            <th>
                Defination Process
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BeginningDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinishMeter)
            </th>

            <th>
                Sample Meter
            </th>
            <th>
                Sample Date
            </th>
            <th></th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RuloProcessID)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.DefinationProcess.Name)
                </td>
                <td>
                    @Html.Raw(item.BeginningDate.ToString("yyyy-MM-dd HH:mm"))
                </td>

                @if (item.IsFinished)
                {
                    <td>
                        @Html.Raw(item.EndDate.Value.ToString("yyyy-MM-dd HH:mm"))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FinishMeter)
                    </td>
                }
                else
                {
                    <td colspan="2">
                        @if (item.Sample != null)
                        {
                            <a onclick="finish(@item.RuloProcessID)" class="btn input-xs btn-danger"> <i class="lni lni-flag"></i> Finish This</a>
                        }
                    </td>
                }

                <td>
                    @if (item.Sample != null)
                        @Html.DisplayFor(modelItem => item.Sample.Meter)
                </td>
                <td>
                    @if (item.Sample != null)
                        @Html.Raw(item.Sample.DateTime.ToString("yyyy-MM-dd HH:mm"))
                </td>
                <td>
                    <div style="display:block;width:150px;">
                        <a onclick="setSample(@(item.SampleID!=null?item.SampleID:0), @item.RuloID, @item.RuloProcessID)" class="btn input-xs btn-info">
                            <i class="lni lni-flag"></i> Sample
                        </a>
                        @if (item.SampleID != null && item.SampleID != 0)
                        {
                            @Html.Raw("|")
                            <a asp-controller="SampleDetail" asp-action="Index" asp-route-ruloid="@item.RuloID" asp-route-sampleid="@item.SampleID" class="btn input-xs btn-info">
                                <i class="lni lni-list"></i> Details
                            </a>
                        }
                    </div>

                </td>

                <td>
                    <div style="display:block;width:107px;">
                        @if (User.IsInRole("RuloProcessUp") || User.IsInRole("RuloProcessFull") || User.IsInRole("AdminFull"))
                        {
                            <a asp-action="Edit" asp-route-ruloprocessid="@item.RuloProcessID">
                                <i class="lni lni-slice"></i>
                            </a>
                        }
                        @if (User.IsInRole("RuloProcessShow") || User.IsInRole("RuloProcessFull") || User.IsInRole("AdminFull"))
                        {
                            if (User.IsInRole("RuloProcessUp", AuthType.Show))
                                @Html.Raw(" | ")

                                <a asp-action="Details" asp-route-ruloprocessid="@item.RuloProcessID">
                                    <i class="lni lni-question-circle"></i>
                                </a>
                            }
                        @if (User.IsInRole("RuloProcessDel") || User.IsInRole("RuloProcessFull") || User.IsInRole("AdminFull"))
                        {
                            if (User.IsInRole("RuloProcessUp", AuthType.Show) || User.IsInRole("RuloProcess", AuthType.Update))
                                @Html.Raw(" | ")

                                <a asp-action="Delete" asp-route-ruloprocessid="@item.RuloProcessID">
                                    <i class="lni lni-circle-minus"></i>
                                </a>
                            }
                        @if (User.IsInRole("RuloProcess", AuthType.Show))
                        {
                            if (User.IsInRole("RuloProcessUp", AuthType.Show) || User.IsInRole("RuloProcess", AuthType.Update) || User.IsInRole("RuloProcess", AuthType.Delete))
                                @Html.Raw(" | ")

                                <a alt="Rulos" onclick="showRulo(@item.RuloID);" href="#" data-toggle="modal" data-target="#modalDialogRulos">
                                    <i class="lni lni-direction-alt"></i>
                                </a>
                            }

                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="modalDialogRulos" tabindex="-1" role="dialog" width="350px" arial-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Rulo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="ruloInfo"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    function setSample(sampleID, ruloID, ruloProcessID) {
        var meter = parseFloat(prompt("Please enter sample cut length", "0"))
        if (isNaN(meter) || meter <= 0) return;

        $.ajax({
            url: "RuloProcess/Sample",
            type: "POST",
            data: {
                SampleID: sampleID,
                RuloID: ruloID,
                RuloProcessID: ruloProcessID,
                Meter: meter
            },
            success: function (data) {
                location.reload();
            },
            error: function (xhk, ajaxOptions, thrownError) {
                if (xhk.status == 401)
                    alert("401 Unauthorized")
                else
                    alert("404 Not Found!");
            }
        });

    }

    function showRulo(ruloId) {
        $.ajax({
            url: "/RuloProcess/GetRulo",
            type: "GET",
            data:
            {
                RuloId: ruloId
            },
            success: function (data) {
                document.getElementById("ruloInfo").innerHTML = data;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Something went wrong!");
            }
        });
    }

    function finish(rpid) {
        var meter = parseInt(prompt("Please enter how many meter exit this process", "0"));
        if (isNaN(meter) || meter <= 0) return;
        if (confirm('Are you sure you want to finish this process?')) {
            finishprocess(rpid, meter);
        }
    }

    function finishprocess(rpid, meter) {
        $.ajax({
            url: "/RuloProcess/FinishProcess",
            type: "POST",
            data:
            {
                RuloProcessID: rpid,
                Meter: meter

            },
            success: function (data) {
                location.reload();
            }, error: function (xhr, ajaxOptions, thrownError) {
                alert("404 Not found!");
            }

        });
    }

</script>